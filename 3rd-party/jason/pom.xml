<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>jason</groupId>
	<artifactId>jason</artifactId>
	<version>1.4.2</version>

	<name>${project.artifactId}</name>
	<url>http://jason.sf.net/</url>
	<licenses>
		<license>
			<name>GNU Library or Lesser General Public License version 2.0 (LGPLv2)</name>
			<url>http://www.gnu.org/licenses/gpl-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>Jomi</id>
			<name>Jomi F. Hubner</name>
			<email>jomifred@gmail.com</email>
		</developer>
		<developer>
			<id>Rafael</id>
			<name>Rafael H. Bordini</name>
			<email>rafael.h.bordini@gmail.com</email>
		</developer>
	</developers>
	<description>
		Mavenized version of original Jason distribution
		$Id: ff8c7d0d75791d3376543bebf181d6b437410477 $
	</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.sourceLevel>1.5</project.build.sourceLevel>
		<project.build.targetLevel>1.5</project.build.targetLevel>

		<jason.dir>${basedir}/download</jason.dir>
		<jason.zipfile.url>http://skylink.dl.sourceforge.net/project/jason/jason/version%20${project.version}/Jason-${project.version}.zip</jason.zipfile.url>
		<jason.zipfile>${jason.dir}/Jason-${project.version}.zip</jason.zipfile>
		<jason.exp.dir>${jason.dir}/Jason-${project.version}</jason.exp.dir>
		<jason.lib.dir>${jason.exp.dir}/lib</jason.lib.dir>
		<jason.src.dir>${jason.exp.dir}/src</jason.src.dir>

		<jade.version>4.3.3</jade.version>
		<junit.version>4.12</junit.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<maven-jar-plugin.version>2.6</maven-jar-plugin.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>tilab (for JADE)</id>
			<url>http://jade.tilab.com/maven/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.tilab.jade</groupId>
			<artifactId>jade</artifactId>
			<version>${jade.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency> <groupId>com.sourcetohtml</groupId> <artifactId>sourcetohtml</artifactId> 
			<version>0.8.1</version> <scope>provided</scope> </dependency> -->

		<!-- <dependency> <groupId>jedit.plugins</groupId> <artifactId>SideKick</artifactId> 
			<version>0.6.2</version> <scope>provided</scope> </dependency> -->

		<!-- <dependency> <groupId>net.sf.jedit-syntax</groupId> <artifactId>jedit-syntax</artifactId> 
			<version>2.2.2</version> </dependency> -->

		<dependency>
			<groupId>cartago</groupId>
			<artifactId>c4jason</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/c4jason.jar</systemPath>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.jedit</groupId>
			<artifactId>BufferTabs</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/jedit/BufferTabs.jar</systemPath>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.jedit</groupId>
			<artifactId>ErrorList</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/jedit/ErrorList.jar</systemPath>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.jedit</groupId>
			<artifactId>jedit</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/jedit/jedit.jar</systemPath>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.jedit</groupId>
			<artifactId>SideKick</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/jedit/SideKick.jar</systemPath>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

<!--
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.7.2.2</version>
			<scope>test</scope>
		</dependency>
-->
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Configure the Maven2 Eclipse IDE Integration (m2e) for non-standard 
						plug-in executions during the compile-test-run life-cycles by the IDE -->
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>

								<!-- Configure "maven-antrun-plugin:run" goal execution in Eclipse 
									IDE -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

								<!-- Configure "build-helper-maven-plugin:add-source" goal execution 
									in Eclipse IDE -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>prepare</id>
						<phase>validate</phase>
						<configuration>
							<target>
				                                <!-- imports the ant-contrib tasks (if/then/else used below) -->
				                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

								<if>
									<not><available file="${jason.zipfile}" /></not>
									<then>
										<mkdir dir="${jason.dir}" />
										<get src="${jason.zipfile.url}" dest="${jason.dir}"/>
										<unzip src="${jason.zipfile}" dest="${jason.dir}" />
									</then>
								</if>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<!-- ant-contrib tasks, required for if/then/else -->
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>20020829</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${jason.src.dir}</source>
								<source>${jason.src.dir}/asl</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${jason.src.dir}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<workingDirectory>${jason.dir}</workingDirectory>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>1.0-beta-7</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/test/**</exclude>
					</excludes>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>jason.infra.centralised.RunCentralisedMAS</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
